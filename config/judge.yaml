__hint__:
  - ~ All keys starting with _ will be ignored
  - ~ Entries named like [foo], [foo].[bar] [foo].[baz]
  - will be merged into one category.
  - ~ A entry named [foo].[bar] will inhert all options
  - defined in entry [foo] if not overwritten
  - ~ code_file option defaults to foo.[name]
  - ~ highlight option defaults to [name]
  - ~ if highlight option was set, monaco option defaults
  - to [highlight], otherwise defaults to [name]
  - ~ Compiling be be ignored if compile option wasn't set
  - ~ Key marked with a ? means the option is optional
  - (name):
      compile?: Compile Command
      code_file?: Where to write code file when compiling
      execute?: Command to execute the program
      highlight?: PrismJS highlight mode
      monaco?: Monaco editor mode
      time_limit_rate: Time limit rate
      target: Compiler output file
      display: Display name
c:
  compile: /usr/bin/gcc -Wall --std=c99 -o ${name} foo.c -lm -O2 -DONLINE_JUDGE -fdiagnostics-color=always
  highlight: c astyle-c
  monaco: cpp
  display: C
cc:
  compile: /usr/bin/g++ -Wall -std=c++14 -o ${name} foo.cc -lm -O2 -DONLINE_JUDGE -fdiagnostics-color=always
  code_file: foo.cc
  highlight: cpp astyle-c
  monaco: cpp
  display: C++
cc.std98:
  compile: /usr/bin/g++ -Wall -std=c++98 -o ${name} foo.cc -lm -O2 -DONLINE_JUDGE -fdiagnostics-color=always
  display: C++ 98
cc.std11:
  compile: /usr/bin/g++ -Wall -std=c++11 -o ${name} foo.cc -lm -O2 -DONLINE_JUDGE -fdiagnostics-color=always
  display: C++ 11
cc.std14:
  display: C++ 14
cc.std17:
  compile: /usr/bin/g++ -Wall -std=c++17 -o ${name} foo.cc -lm -O2 -DONLINE_JUDGE -fdiagnostics-color=always
  display: C++ 17
java:
  compile: /usr/bin/javac -d ${dir} -encoding utf8 ./Main.java
  code_file: Main.java
  target: Main.class
  execute: /usr/bin/java Main
  time_limit_rate: 2
  highlight: java astyle-java
  monaco: java
  display: Java
py:
  compile: >-
    /usr/bin/python -c "import py_compile; py_compile.compile('${dir}/foo.py',
    '${dir}/${name}', doraise=True)"
  code_file: foo.py
  execute: /usr/bin/python ${name}
  highlight: python
  display: Python
py.py2:
  display: Python 2
py.py3:
  compile: >-
    /usr/bin/python3 -c "import py_compile; py_compile.compile('${dir}/foo.py',
    '${dir}/${name}', doraise=True)"
  execute: /usr/bin/python3 ${name}
  display: Python 3

codeforces:
  execute: none
  display: Codeforces
  domain:
  - codeforces # Allow domain 'codeforces' to use these languages
codeforces.43:
  highlight: cpp astyle-c
  monaco: cpp
  display: GNU GCC C11 5.1.0
  comment: //
codeforces.52:
  highlight: cpp astyle-c
  monaco: cpp
  display: Clang++17 Diagnostics
  comment: //
codeforces.50:
  highlight: cpp astyle-c
  monaco: cpp
  display: GNU G++14 6.4.0
  comment: //
codeforces.54:
  highlight: cpp astyle-c
  monaco: cpp
  display: GNU G++17 7.3.0
  comment: //
codeforces.59:
  highlight: cpp astyle-c
  monaco: cpp
  display: Microsoft Visual C++ 2017
  comment: //
codeforces.61:
  highlight: cpp astyle-c
  monaco: cpp
  display: GNU G++17 9.2.0 (64 bit, msys 2)
  comment: //
codeforces.65:
  highlight: cpp astyle-cs
  monaco: csharp
  display: C# 8, .NET Core 3.1
  comment: //
codeforces.9:
  highlight: cpp astyle-cs
  monaco: csharp
  display: C# Mono 6.8
  comment: //
codeforces.28:
  highlight: d
  monaco: plain
  display: D DMD32 v2.091.0
  comment: //
codeforces.32:
  highlight: go
  display: Go 1.15.6
  comment: //
codeforces.12:
  highlight: haskell
  display: Haskell GHC 8.10.1
  comment: --
codeforces.60:
  highlight: java astyle-java
  monaco: java
  display: Java 11.0.6
  comment: //
codeforces.36:
  highlight: java astyle-java
  monaco: java
  display: Java 1.8.0_241
  comment: //
codeforces.48:
  highlight: kotlin
  display: Kotlin 1.4.0
  comment: //
codeforces.19:
  highlight: ocaml
  monaco: plain
  display: OCaml 4.02.1
  comment: ['(*','*)']
codeforces.3:
  highlight: pascal
  display: Delphi 7
  comment: //
codeforces.4:
  highlight: pascal
  display: Free Pascal 3.0.2
  comment: //
codeforces.51:
  highlight: pascal
  display: PascalABC.NET 3.4.2
  comment: //
codeforces.13:
  highlight: perl
  display: Perl 5.20.1
  comment: '#'
codeforces.6:
  highlight: php
  display: PHP 7.2.13
  comment: //
codeforces.7:
  highlight: python
  display: Python 2.7.18
  comment: '#'
codeforces.31:
  highlight: python
  display: Python 3.9.1
  comment: '#'
codeforces.40:
  highlight: python
  display: PyPy 2.7 (7.3.0)
  comment: '#'
codeforces.41:
  highlight: python
  display: PyPy 3.7 (7.3.0)
  comment: '#'
codeforces.67:
  highlight: ruby
  display: Ruby 3.0.0
  comment: '#'
codeforces.49:
  highlight: rust
  display: Rust 1.49.0
  comment: //
codeforces.20:
  highlight: scala
  display: Scala 2.12.8
  comment: //
codeforces.34:
  highlight: javascript
  display: JavaScript V8 4.8.0
  comment: //
codeforces.55:
  highlight: javascript
  display: Node.js 12.6.3
  comment: //

# pas:
#   compile: /usr/bin/fpc -O2 -o${dir}/${name} foo.pas
#   highlight: pascal
#   display: Pascal
# php:
#   execute: /usr/bin/php foo.php
#   display: PHP
# rs:
#   compile: /usr/bin/rustc -O -o ${dir}/${name} ${dir}/foo.rs
#   highlight: rust
#   display: Rust
# hs:
#   compile: /usr/bin/ghc -O -outputdir /tmp -o ${name} foo.hs
#   highlight: haskell
#   display: Haskell
# js:
#   execute: /usr/bin/jsc ${dir}/foo.js
#   highlight: javascript
#   display: Javascript (JSC)
# go:
#   compile: /usr/bin/go build -o ${name} foo.go
#   display: Golang
# rb:
#   execute: /usr/bin/ruby foo.rb
#   highlight: ruby
#   display: Ruby
# cs:
#   compile: /usr/bin/mcs -optimize+ -out:${dir}/${name} ${dir}/foo.cs
#   execute: /usr/bin/mono ${name}
#   highlight: csharp astyle-cs
#   monaco: csharp
#   display: Csharp
# jl:
#   execute: /usr/bin/julia ${dir}/foo.jl
#   highlight: julia
#   display: Julia
